package textExcel;

public class FormulaCell extends RealCell implements Cell {
	
	private Spreadsheet spread;
	
	public FormulaCell(String formula) {
		super(formula);
	}
	
	public FormulaCell(String formula, Spreadsheet spread) {
		super(formula);
		this.spread = spread;
	}
	
	@Override
	public String abbreviatedCellText() {
		String answer = (getDoubleValue() + "          ").substring(0, 10);
		return answer;
	}
	
	public String fullCellText() {
		return super.fullCellText();
	}
	
	@Override
	public double getDoubleValue() {
		String formula = fullCellText().substring(2, fullCellText().length()-2);
		String[] formulaDiv = formula.split(" ");
		double num;
		double result;
		if (formulaDiv[0].toLowerCase().equals("sum")) {
			return sum(formulaDiv[1]);
		} else if (formulaDiv[0].toLowerCase().equals("avg")) {
			return avg(formulaDiv[1]);
		}
		for (int i = 0; i < formulaDiv.length; i++) {
			if (formulaDiv[0].length() < 4 && formulaDiv[0].substring(0,1).matches("[a-zA-Z]+")) {
				SpreadsheetLocation gridLoc = new SpreadsheetLocation(formulaDiv[0]);
				formulaDiv[i] = ((RealCell) spread.getCell(gridLoc)).fullCellText();
			} else {
			}
		}
		result = Double.parseDouble(formulaDiv[0]);
		for (int i = 2; i < formulaDiv.length; i+=2) {
			num = Double.parseDouble(formulaDiv[i]);
				if (formulaDiv[i - 1].equals("+")) {
					result += num;
				} else if (formulaDiv[i - 1].equals("-")) {
					result -= num;
				} else if (formulaDiv[i - 1].equals("/")) {
					result /= num;
				} else if (formulaDiv[i - 1].equals("*")) {
					result *= num;
				} else {
					throw new IllegalArgumentException("Please enter a valid operator");
				}
		}
		return result;
	}
	
	public double sum(String )
}
