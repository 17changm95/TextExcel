package textExcel;
import java.util.*;
import java.io.*;

	public class Spreadsheet implements Grid {
		private Cell[][] spreadArr = new Cell[12][20];
	
	public Spreadsheet() {
		for (int i = 0; i < spreadArr.length; i++) {
			for (int j = 0; j < spreadArr[i].length; j++) {
				spreadArr[i][j] = new EmptyCell();
			}
		}
	}
	
	private String Export(String filename){
		PrintStream outputFile;
			try {
				outputFile = new PrintStream(new File(filename));
			}
		catch (FileNotFoundException e) {
			return "File not found: " + filename;
		}
		//<Write all your code here>
		outputFile.close();
		return "";
	}
	
	private String Import(String filename){
		Scanner inputFile;
			try {
				inputFile = new Scanner(new File(filename));
			}
			catch (FileNotFoundException e) {
				return "File not found: " + filename;
			}
			//<Your code goes here>
			inputFile.close();
			return "";
	}

	
	@Override
	public String processCommand(String command) {
		String[] divCommand = command.split(" ", 3);
		if (command.equalsIgnoreCase("clear")) {
			for (int i = 0; i < spreadArr.length; i++) {
				for (int j = 0; j < spreadArr[i].length; j++) {
					spreadArr[i][j] = new EmptyCell();
				}
			}
			return getGridText();
		} else if (command.length() == 0) {
			return "";
		} else if (command.length() < 4) {
			SpreadsheetLocation gridLoc = new SpreadsheetLocation(command);	
			return (getCell(gridLoc).fullCellText());
		} else if (divCommand.length > 1) {
			if (divCommand[1].equals("=")) {
				SpreadsheetLocation gridLoc = new SpreadsheetLocation(divCommand[0]);
				int rowNum = gridLoc.getRow();
				int colNum = gridLoc.getCol();
				if (divCommand[2].charAt(0) == '"' && divCommand[2].charAt(divCommand[2].length() - 1) == '"') {
					spreadArr[colNum][rowNum] = new TextCell(divCommand[2].substring(1, divCommand[2].length() - 1));
				} else if (divCommand[2].substring(divCommand[2].length() - 1).equals("%")) {
					spreadArr[colNum][rowNum] = new PercentCell(divCommand[2]);
				} else if (divCommand[2].indexOf(".") > 0) {
					spreadArr[colNum][rowNum] = new ValueCell(divCommand[2]);
				} else if (divCommand[2].charAt(0) == '(' && divCommand[2].charAt(0) == ')'){
					spreadArr[colNum][rowNum] = new FormulaCell(divCommand[2]);
				} else {
					spreadArr[colNum][rowNum] = new RealCell(divCommand[2]);
				}
				return getGridText();
			} else if (divCommand[0].equalsIgnoreCase("clear")) {
				for (int i = 1; i < divCommand.length; i++) {
					SpreadsheetLocation gridLoc = new SpreadsheetLocation(divCommand[i]);
					int rowNum = gridLoc.getRow();
					int colNum = gridLoc.getCol();
					spreadArr[colNum][gridLoc.getRow()] = new EmptyCell();
				}
				return getGridText();
			} else {
				throw new IllegalArgumentException("Please enter a valid input");
			}
		} else {
			throw new IllegalArgumentException("Please enter a valid equality");
		}
	}

	@Override
	public int getRows() {
		return 20;
	}

	@Override
	public int getCols() {
		return 12;
	}

	@Override
	public Cell getCell(Location loc) {
		return spreadArr[loc.getCol()][loc.getRow()];
	}

	@Override
	public String getGridText() {
		String firstRow = "   ";	//is a printout of the first row
		String regRow = "";			//is a printout of all other rows
		for (char c = 'A'; c <= 'L'; c++) {
			firstRow += "|" + c + "         ";
		}		
		firstRow += "|";
		for (int j = 0; j < 20; j++) {
			if (j + 1 < 10) {
				regRow += (j + 1) + "  ";
			} else  {
				regRow += (j + 1) + " ";
			}
			for (int k = 0; k < 12; k++) {
				regRow += "|" + spreadArr[k][j].abbreviatedCellText();
			}
			regRow += "|\n";
		}		
		return firstRow + "\n" + regRow;
	}
}